# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WCTCLU8j6h2oZaNv2OfTLMYSQ301eiM3
"""



#Actividad 3: Solución de problemas. N4 006
#Integrantes del equipo
#Bruce Brandon Leija Cortés 1982141
#Bayron Javier Hernández Sifuentes 2132169
#Brisa Marlene Mar Santiago 2127823
#Leonardo Rodrigo Salinas Mejia 2035376
#librerias
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Datos
np.random.seed(0)
horas_estudio = np.random.rand(100, 1) * 10
calificaciones = 8 * horas_estudio + np.random.randn(100, 1) * 2

X_train, X_test, y_train, y_test = train_test_split(horas_estudio, calificaciones, test_size=0.2, random_state=0)

# Entrenamiento del modelo
model = LinearRegression()
model.fit(X_train, y_train)

# Prueba del modelo
y_pred = model.predict(X_test)

# Calcular el error
mse = mean_squared_error(y_test, y_pred)
print("Error del cuadrático medio:", mse)

# Graficar el modelo de regresión lineal con las predicciones
plt.scatter(X_test, y_test, color='black')
plt.plot(X_test, y_pred, color='blue', linewidth=3)
plt.xlabel('Horas de estudio')
plt.ylabel('Calificación')
plt.title('Modelo de Regresión Lineal')
plt.show()